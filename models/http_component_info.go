// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HTTPComponentInfo http component info
//
// swagger:model http.ComponentInfo
type HTTPComponentInfo struct {

	// bike id
	BikeID string `json:"bike_id,omitempty"`

	// brand
	Brand string `json:"brand,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// installed at
	InstalledAt string `json:"installed_at,omitempty"`

	// installed mileage
	InstalledMileage int64 `json:"installed_mileage,omitempty"`

	// max mileage
	MaxMileage int64 `json:"max_mileage,omitempty"`

	// model
	Model string `json:"model,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this http component info
func (m *HTTPComponentInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this http component info based on context it is used
func (m *HTTPComponentInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HTTPComponentInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HTTPComponentInfo) UnmarshalBinary(b []byte) error {
	var res HTTPComponentInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
