// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InternalAdapterHandlerHTTPBikeRequest internal adapter handler http bike request
//
// swagger:model internal_adapter_handler_http.BikeRequest
type InternalAdapterHandlerHTTPBikeRequest struct {

	// mileage
	// Example: 1500
	// Required: true
	Mileage *int64 `json:"mileage"`

	// model
	// Example: Mountain Bike Pro
	// Required: true
	Model *string `json:"model"`

	// type
	// Example: mountain
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this internal adapter handler http bike request
func (m *InternalAdapterHandlerHTTPBikeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMileage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InternalAdapterHandlerHTTPBikeRequest) validateMileage(formats strfmt.Registry) error {

	if err := validate.Required("mileage", "body", m.Mileage); err != nil {
		return err
	}

	return nil
}

func (m *InternalAdapterHandlerHTTPBikeRequest) validateModel(formats strfmt.Registry) error {

	if err := validate.Required("model", "body", m.Model); err != nil {
		return err
	}

	return nil
}

func (m *InternalAdapterHandlerHTTPBikeRequest) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this internal adapter handler http bike request based on context it is used
func (m *InternalAdapterHandlerHTTPBikeRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InternalAdapterHandlerHTTPBikeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InternalAdapterHandlerHTTPBikeRequest) UnmarshalBinary(b []byte) error {
	var res InternalAdapterHandlerHTTPBikeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
