// Code generated by go-swagger; DO NOT EDIT.

package bikes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sm8ta/webike_bike_microservice_nikita/models"
)

// GetBikesMyReader is a Reader for the GetBikesMy structure.
type GetBikesMyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBikesMyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetBikesMyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBikesMyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBikesMyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /bikes/my] GetBikesMy", response, response.Code())
	}
}

// NewGetBikesMyOK creates a GetBikesMyOK with default headers values
func NewGetBikesMyOK() *GetBikesMyOK {
	return &GetBikesMyOK{}
}

/*
GetBikesMyOK describes a response with status code 200, with default header values.

Список байков пользователя
*/
type GetBikesMyOK struct {
	Payload *models.HTTPSuccessResponse
}

// IsSuccess returns true when this get bikes my o k response has a 2xx status code
func (o *GetBikesMyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bikes my o k response has a 3xx status code
func (o *GetBikesMyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes my o k response has a 4xx status code
func (o *GetBikesMyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bikes my o k response has a 5xx status code
func (o *GetBikesMyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes my o k response a status code equal to that given
func (o *GetBikesMyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bikes my o k response
func (o *GetBikesMyOK) Code() int {
	return 200
}

func (o *GetBikesMyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyOK %s", 200, payload)
}

func (o *GetBikesMyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyOK %s", 200, payload)
}

func (o *GetBikesMyOK) GetPayload() *models.HTTPSuccessResponse {
	return o.Payload
}

func (o *GetBikesMyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPSuccessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBikesMyUnauthorized creates a GetBikesMyUnauthorized with default headers values
func NewGetBikesMyUnauthorized() *GetBikesMyUnauthorized {
	return &GetBikesMyUnauthorized{}
}

/*
GetBikesMyUnauthorized describes a response with status code 401, with default header values.

Не авторизован
*/
type GetBikesMyUnauthorized struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get bikes my unauthorized response has a 2xx status code
func (o *GetBikesMyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bikes my unauthorized response has a 3xx status code
func (o *GetBikesMyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes my unauthorized response has a 4xx status code
func (o *GetBikesMyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bikes my unauthorized response has a 5xx status code
func (o *GetBikesMyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes my unauthorized response a status code equal to that given
func (o *GetBikesMyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bikes my unauthorized response
func (o *GetBikesMyUnauthorized) Code() int {
	return 401
}

func (o *GetBikesMyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyUnauthorized %s", 401, payload)
}

func (o *GetBikesMyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyUnauthorized %s", 401, payload)
}

func (o *GetBikesMyUnauthorized) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetBikesMyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBikesMyInternalServerError creates a GetBikesMyInternalServerError with default headers values
func NewGetBikesMyInternalServerError() *GetBikesMyInternalServerError {
	return &GetBikesMyInternalServerError{}
}

/*
GetBikesMyInternalServerError describes a response with status code 500, with default header values.

Внутренняя ошибка сервера
*/
type GetBikesMyInternalServerError struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get bikes my internal server error response has a 2xx status code
func (o *GetBikesMyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bikes my internal server error response has a 3xx status code
func (o *GetBikesMyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes my internal server error response has a 4xx status code
func (o *GetBikesMyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bikes my internal server error response has a 5xx status code
func (o *GetBikesMyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bikes my internal server error response a status code equal to that given
func (o *GetBikesMyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bikes my internal server error response
func (o *GetBikesMyInternalServerError) Code() int {
	return 500
}

func (o *GetBikesMyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyInternalServerError %s", 500, payload)
}

func (o *GetBikesMyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/my][%d] getBikesMyInternalServerError %s", 500, payload)
}

func (o *GetBikesMyInternalServerError) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetBikesMyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
