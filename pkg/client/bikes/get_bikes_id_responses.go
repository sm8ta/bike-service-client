// Code generated by go-swagger; DO NOT EDIT.

package bikes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sm8ta/webike_bike_microservice_nikita/models"
)

// GetBikesIDReader is a Reader for the GetBikesID structure.
type GetBikesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBikesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetBikesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBikesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBikesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBikesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /bikes/{id}] GetBikesID", response, response.Code())
	}
}

// NewGetBikesIDOK creates a GetBikesIDOK with default headers values
func NewGetBikesIDOK() *GetBikesIDOK {
	return &GetBikesIDOK{}
}

/*
GetBikesIDOK describes a response with status code 200, with default header values.

Байк найден
*/
type GetBikesIDOK struct {
	Payload *models.DomainBike
}

// IsSuccess returns true when this get bikes Id o k response has a 2xx status code
func (o *GetBikesIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bikes Id o k response has a 3xx status code
func (o *GetBikesIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes Id o k response has a 4xx status code
func (o *GetBikesIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bikes Id o k response has a 5xx status code
func (o *GetBikesIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes Id o k response a status code equal to that given
func (o *GetBikesIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bikes Id o k response
func (o *GetBikesIDOK) Code() int {
	return 200
}

func (o *GetBikesIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdOK %s", 200, payload)
}

func (o *GetBikesIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdOK %s", 200, payload)
}

func (o *GetBikesIDOK) GetPayload() *models.DomainBike {
	return o.Payload
}

func (o *GetBikesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainBike)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBikesIDUnauthorized creates a GetBikesIDUnauthorized with default headers values
func NewGetBikesIDUnauthorized() *GetBikesIDUnauthorized {
	return &GetBikesIDUnauthorized{}
}

/*
GetBikesIDUnauthorized describes a response with status code 401, with default header values.

Не авторизован
*/
type GetBikesIDUnauthorized struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get bikes Id unauthorized response has a 2xx status code
func (o *GetBikesIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bikes Id unauthorized response has a 3xx status code
func (o *GetBikesIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes Id unauthorized response has a 4xx status code
func (o *GetBikesIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bikes Id unauthorized response has a 5xx status code
func (o *GetBikesIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes Id unauthorized response a status code equal to that given
func (o *GetBikesIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bikes Id unauthorized response
func (o *GetBikesIDUnauthorized) Code() int {
	return 401
}

func (o *GetBikesIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdUnauthorized %s", 401, payload)
}

func (o *GetBikesIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdUnauthorized %s", 401, payload)
}

func (o *GetBikesIDUnauthorized) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetBikesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBikesIDForbidden creates a GetBikesIDForbidden with default headers values
func NewGetBikesIDForbidden() *GetBikesIDForbidden {
	return &GetBikesIDForbidden{}
}

/*
GetBikesIDForbidden describes a response with status code 403, with default header values.

Доступ запрещен
*/
type GetBikesIDForbidden struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get bikes Id forbidden response has a 2xx status code
func (o *GetBikesIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bikes Id forbidden response has a 3xx status code
func (o *GetBikesIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes Id forbidden response has a 4xx status code
func (o *GetBikesIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bikes Id forbidden response has a 5xx status code
func (o *GetBikesIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes Id forbidden response a status code equal to that given
func (o *GetBikesIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bikes Id forbidden response
func (o *GetBikesIDForbidden) Code() int {
	return 403
}

func (o *GetBikesIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdForbidden %s", 403, payload)
}

func (o *GetBikesIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdForbidden %s", 403, payload)
}

func (o *GetBikesIDForbidden) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetBikesIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetBikesIDNotFound creates a GetBikesIDNotFound with default headers values
func NewGetBikesIDNotFound() *GetBikesIDNotFound {
	return &GetBikesIDNotFound{}
}

/*
GetBikesIDNotFound describes a response with status code 404, with default header values.

Байк не найден
*/
type GetBikesIDNotFound struct {
	Payload *models.HTTPErrorResponse
}

// IsSuccess returns true when this get bikes Id not found response has a 2xx status code
func (o *GetBikesIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bikes Id not found response has a 3xx status code
func (o *GetBikesIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bikes Id not found response has a 4xx status code
func (o *GetBikesIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bikes Id not found response has a 5xx status code
func (o *GetBikesIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bikes Id not found response a status code equal to that given
func (o *GetBikesIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bikes Id not found response
func (o *GetBikesIDNotFound) Code() int {
	return 404
}

func (o *GetBikesIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdNotFound %s", 404, payload)
}

func (o *GetBikesIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bikes/{id}][%d] getBikesIdNotFound %s", 404, payload)
}

func (o *GetBikesIDNotFound) GetPayload() *models.HTTPErrorResponse {
	return o.Payload
}

func (o *GetBikesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
