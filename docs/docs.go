// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bikes": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создание нового байка",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Создать байк",
                "parameters": [
                    {
                        "description": "Данные байка",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.BikeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Байк создан",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Bike"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/bikes/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение всех байков авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Получить байки пользователя по айди пользователя",
                "responses": {
                    "200": {
                        "description": "Список байков пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Bike"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/bikes/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации о байке по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Получить байк",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID байка",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Байк найден",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Bike"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Байк не найден",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление данных байка",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Обновить байк",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID байка",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateBike"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Байк обновлен",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Bike"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление байка",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Удалить байк",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID байка",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Байк удален",
                        "schema": {
                            "$ref": "#/definitions/http.successResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/bikes/{id}/with-components": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение байка со всеми компонентами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Получить байк с компонентами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID байка",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Байк с компонентами",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Bike"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Байк не найден",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/bikes/{id}/with-user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации о байке и его владельце",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bikes"
                ],
                "summary": "Получить байк с пользователем",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID байка",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Байк с пользователем",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/http.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/http.BikeWithUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Байк не найден",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/components": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавление компонента к байку",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "components"
                ],
                "summary": "Создать компонент",
                "parameters": [
                    {
                        "description": "Данные компонента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ComponentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Компонент создан",
                        "schema": {
                            "$ref": "#/definitions/http.successResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/components/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации о компоненте по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "components"
                ],
                "summary": "Получить компонент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID компонента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Компонент найден",
                        "schema": {
                            "$ref": "#/definitions/http.successResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Компонент не найден",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление данных компонента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "components"
                ],
                "summary": "Обновить компонент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID компонента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateComponent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Компонент обновлен",
                        "schema": {
                            "$ref": "#/definitions/http.successResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление компонента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "components"
                ],
                "summary": "Удалить компонент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID компонента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Компонент удален",
                        "schema": {
                            "$ref": "#/definitions/http.successResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Bike": {
            "type": "object",
            "properties": {
                "bike_id": {
                    "type": "string"
                },
                "bike_name": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Component"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "mileage": {
                    "type": "integer"
                },
                "model": {
                    "description": "stels",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.BikeType"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "domain.BikeType": {
            "type": "string",
            "enum": [
                "bmx",
                "mtb",
                "road"
            ],
            "x-enum-varnames": [
                "BMX",
                "MTB",
                "Road"
            ]
        },
        "domain.Component": {
            "type": "object",
            "required": [
                "bike_id",
                "installed_at",
                "max_mileage",
                "name"
            ],
            "properties": {
                "bike_id": {
                    "type": "string"
                },
                "brand": {
                    "type": "string",
                    "maxLength": 100
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installed_at": {
                    "type": "string"
                },
                "installed_mileage": {
                    "type": "integer",
                    "minimum": 0
                },
                "max_mileage": {
                    "type": "integer",
                    "maximum": 1000000,
                    "minimum": 1
                },
                "model": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "enum": [
                        "handlebars",
                        "frame",
                        "wheels"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.ComponentName"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.ComponentName": {
            "type": "string",
            "enum": [
                "handlebars",
                "frame",
                "wheels"
            ],
            "x-enum-varnames": [
                "Handlebars",
                "Frame",
                "Wheels"
            ]
        },
        "http.BikeRequest": {
            "type": "object",
            "required": [
                "mileage",
                "model",
                "type"
            ],
            "properties": {
                "mileage": {
                    "type": "integer",
                    "example": 1500
                },
                "model": {
                    "type": "string",
                    "example": "Mountain Bike Pro"
                },
                "type": {
                    "type": "string",
                    "example": "mountain"
                }
            }
        },
        "http.BikeWithUserResponse": {
            "type": "object",
            "properties": {
                "bike_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "mileage": {
                    "type": "integer",
                    "example": 1500
                },
                "model": {
                    "type": "string",
                    "example": "Mountain Bike Pro"
                },
                "user": {
                    "$ref": "#/definitions/http.User"
                }
            }
        },
        "http.ComponentRequest": {
            "type": "object",
            "required": [
                "bike_id",
                "installed_mileage",
                "max_mileage",
                "name"
            ],
            "properties": {
                "bike_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "brand": {
                    "type": "string",
                    "example": "Shimano"
                },
                "installed_mileage": {
                    "type": "integer",
                    "example": 1000
                },
                "max_mileage": {
                    "type": "integer",
                    "example": 5000
                },
                "model": {
                    "type": "string",
                    "example": "Deore XT"
                },
                "name": {
                    "type": "string",
                    "example": "handlebars"
                }
            }
        },
        "http.UpdateBike": {
            "type": "object",
            "properties": {
                "mileage": {
                    "type": "integer",
                    "example": 2000
                },
                "model": {
                    "type": "string",
                    "example": "New Model"
                },
                "type": {
                    "type": "string",
                    "example": "mountain"
                }
            }
        },
        "http.UpdateComponent": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "example": "Shimano"
                },
                "installed_mileage": {
                    "type": "integer",
                    "example": 1000
                },
                "max_mileage": {
                    "type": "integer",
                    "example": 5000
                },
                "model": {
                    "type": "string",
                    "example": "XT"
                },
                "name": {
                    "type": "string",
                    "example": "handlebars"
                }
            }
        },
        "http.User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Иван Иванов"
                },
                "user_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "http.successResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.1",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Bike Microservice API",
	Description:      "API для управления байками",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
